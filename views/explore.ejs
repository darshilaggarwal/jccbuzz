<%- include('partials/header2') %>

<!-- Modern Toast Notification -->
<div id="toast" class="fixed bottom-5 left-1/2 transform -translate-x-1/2 translate-y-full transition-all duration-300 z-50 opacity-0">
    <div class="bg-black bg-opacity-75 text-white px-6 py-3 rounded-full shadow-lg backdrop-blur-sm">
        <span id="toast-message" class="font-medium text-sm"></span>
    </div>
</div>

<div class="max-w-6xl mx-auto mt-8 px-4">
    <div class="bg-white dark:bg-black rounded-lg shadow-md overflow-hidden p-6">
        <!-- Page Header -->
        <div class="flex items-center justify-between mb-6">
            <h1 class="text-2xl font-bold text-gray-800 dark:text-white">Explore</h1>
            <a href="/feed" class="text-blue-500 hover:text-blue-600 flex items-center">
                <i class="fas fa-arrow-left mr-2"></i> Back to Feed
            </a>
        </div>

        <!-- Search Bar -->
        <div class="mb-6 relative">
            <div class="relative">
                <input type="text" 
                       id="searchInput" 
                       placeholder="Search by username or name..." 
                       class="w-full px-4 py-3 bg-gray-100 dark:bg-gray-800 border border-gray-200 dark:border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
                <div class="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400">
                    <i class="fas fa-search"></i>
                </div>
            </div>
            
            <!-- Search Results Dropdown -->
            <div id="searchResults" class="absolute z-50 mt-1 w-full bg-white dark:bg-gray-900 border border-gray-200 dark:border-gray-700 rounded-lg shadow-lg max-h-96 overflow-y-auto hidden">
                <div id="searchLoading" class="py-4 text-center hidden">
                    <div class="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-500 mx-auto"></div>
                </div>
                <div id="searchResultsList">
                    <!-- Search results will appear here -->
                </div>
                <div id="noResultsMessage" class="py-6 text-center hidden">
                    <p class="text-gray-500 dark:text-gray-400">No users found</p>
                </div>
            </div>
        </div>

        <!-- Tab Navigation -->
        <div class="border-b border-gray-200 dark:border-gray-800 mb-6">
            <nav class="flex -mb-px">
                <button id="tab-posts" class="py-3 px-4 font-medium text-blue-600 dark:text-blue-400 border-b-2 border-blue-600 dark:border-blue-400">
                    <i class="fas fa-th mr-2"></i> Explore Posts
                </button>
                <button id="tab-users" class="py-3 px-4 font-medium text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300">
                    <i class="fas fa-users mr-2"></i> Discover People
                </button>
            </nav>
        </div>

        <!-- Explore Posts Grid (Instagram-like) -->
        <div id="posts-grid" class="mb-10">
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-1 sm:gap-2 md:gap-3">
                <% if (explorePosts && explorePosts.length > 0) { %>
                    <% explorePosts.forEach((post, index) => { %>
                        <div class="aspect-square relative group cursor-pointer post-card overflow-hidden rounded-md border border-gray-200 dark:border-gray-800">
                            <a href="/post/<%= post._id %>" class="block w-full h-full">
                                <% if (post.images && post.images.length > 0) { %>
                                    <img src="<%= post.images[0].url %>" alt="Post by <%= post.user.username %>" 
                                        class="w-full h-full object-cover">
                                <% } else { %>
                                    <% 
                                    // Generate a varied background color based on post ID or index
                                    const colors = [
                                        'bg-blue-100 dark:bg-blue-900', 
                                        'bg-pink-100 dark:bg-pink-900',
                                        'bg-green-100 dark:bg-green-900', 
                                        'bg-purple-100 dark:bg-purple-900',
                                        'bg-yellow-100 dark:bg-yellow-900',
                                        'bg-red-100 dark:bg-red-900'
                                    ];
                                    const colorClass = colors[index % colors.length];
                                    %>
                                    <div class="w-full h-full flex items-center justify-center <%= colorClass %> p-4 overflow-hidden">
                                        <div class="bg-white dark:bg-gray-800 bg-opacity-70 dark:bg-opacity-70 p-3 rounded-lg shadow-sm w-full">
                                            <p class="text-gray-800 dark:text-gray-200 text-sm line-clamp-6 overflow-hidden font-medium"><%= post.content %></p>
                                        </div>
                                    </div>
                                <% } %>
                                    
                                <!-- Hover Overlay -->
                                <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-300 flex items-center justify-center">
                                    <div class="opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-center text-white space-x-4">
                                        <div class="flex items-center">
                                            <i class="fas fa-heart mr-2"></i>
                                            <span><%= post.likes.length %></span>
                                        </div>
                                        <div class="flex items-center">
                                            <i class="fas fa-comment mr-2"></i>
                                            <span><%= post.comments ? post.comments.length : 0 %></span>
                                        </div>
                                    </div>
                                </div>
                            </a>
                            
                            <!-- User info on hover -->
                            <div class="absolute bottom-0 left-0 right-0 p-2 bg-gradient-to-t from-black to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300">
                                <a href="/user/<%= post.user.username %>" class="flex items-center">
                                    <img src="<%= post.user.profileImage %>" alt="<%= post.user.name %>" class="w-6 h-6 rounded-full object-cover">
                                    <span class="ml-2 text-white text-sm font-medium truncate"><%= post.user.username %></span>
                                </a>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="col-span-3 py-10 text-center">
                        <div class="text-5xl text-gray-300 dark:text-gray-700 mb-4">
                            <i class="fas fa-image"></i>
                        </div>
                        <h3 class="text-lg font-medium text-gray-700 dark:text-gray-300">No posts to explore yet</h3>
                        <p class="text-gray-500 dark:text-gray-400 mt-1">Follow more users to see their content</p>
                    </div>
                <% } %>
            </div>
        </div>

        <!-- Users Grid -->
        <div id="users-grid" class="hidden">
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mb-8">
                <% suggestedUsers.forEach(suggestedUser => { %>
                    <div class="bg-white dark:bg-black border border-gray-200 dark:border-gray-800 rounded-lg overflow-hidden user-card">
                        <div class="p-4">
                            <div class="flex items-center justify-between mb-4">
                                <a href="/user/<%= suggestedUser.username %>" class="flex items-center group">
                                    <img src="<%= suggestedUser.profileImage %>" 
                                        alt="<%= suggestedUser.name %>" 
                                        class="w-12 h-12 rounded-full object-cover">
                                    <div class="ml-3">
                                        <h4 class="font-semibold text-gray-800 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400">
                                            <%= suggestedUser.name %>
                                        </h4>
                                        <p class="text-xs text-gray-500 dark:text-gray-400">@<%= suggestedUser.username %></p>
                                    </div>
                                </a>
                                <button onclick="followUser('<%= suggestedUser._id %>')" 
                                        class="px-4 py-1 bg-blue-500 hover:bg-blue-600 text-white rounded-full text-sm follow-btn"
                                        data-user-id="<%= suggestedUser._id %>">
                                    Follow
                                </button>
                            </div>
                            <% if (suggestedUser.bio) { %>
                                <p class="text-sm text-gray-600 dark:text-gray-400 mb-2 line-clamp-2"><%= suggestedUser.bio %></p>
                            <% } %>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>
</div>

<script>
    // Tab switching
    document.getElementById('tab-posts').addEventListener('click', function() {
        document.getElementById('posts-grid').classList.remove('hidden');
        document.getElementById('users-grid').classList.add('hidden');
        
        // Update tab styles
        this.classList.add('text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
        this.classList.remove('text-gray-500', 'dark:text-gray-400');
        
        document.getElementById('tab-users').classList.remove('text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
        document.getElementById('tab-users').classList.add('text-gray-500', 'dark:text-gray-400');
    });
    
    document.getElementById('tab-users').addEventListener('click', function() {
        document.getElementById('users-grid').classList.remove('hidden');
        document.getElementById('posts-grid').classList.add('hidden');
        
        // Update tab styles
        this.classList.add('text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
        this.classList.remove('text-gray-500', 'dark:text-gray-400');
        
        document.getElementById('tab-posts').classList.remove('text-blue-600', 'dark:text-blue-400', 'border-b-2', 'border-blue-600', 'dark:border-blue-400');
        document.getElementById('tab-posts').classList.add('text-gray-500', 'dark:text-gray-400');
    });
    
    // Real-time search functionality
    let searchTimeout;
    
    document.getElementById('searchInput').addEventListener('input', function(e) {
        const searchTerm = e.target.value.trim();
        
        // Clear previous timeout
        if (searchTimeout) {
            clearTimeout(searchTimeout);
        }
        
        const searchResults = document.getElementById('searchResults');
        const searchLoading = document.getElementById('searchLoading');
        const searchResultsList = document.getElementById('searchResultsList');
        const noResultsMessage = document.getElementById('noResultsMessage');
        
        // Hide results if search term is empty
        if (searchTerm.length < 2) {
            searchResults.classList.add('hidden');
            return;
        }
        
        // Show loading indicator and results container
        searchResults.classList.remove('hidden');
        searchLoading.classList.remove('hidden');
        searchResultsList.innerHTML = '';
        noResultsMessage.classList.add('hidden');
        
        // Set a small timeout to prevent too many requests while typing
        searchTimeout = setTimeout(() => {
            // Fetch users from API
            fetch(`/api/search-users?q=${encodeURIComponent(searchTerm)}`)
                .then(response => response.json())
                .then(data => {
                    // Hide loading indicator
                    searchLoading.classList.add('hidden');
                    
                    if (!data.users || data.users.length === 0) {
                        // Show no results message
                        noResultsMessage.classList.remove('hidden');
                        return;
                    }
                    
                    // Build results HTML
                    let resultsHTML = '';
                    data.users.forEach(user => {
                        resultsHTML += `
                            <a href="/user/${user.username}" class="flex items-center p-3 hover:bg-gray-50 dark:hover:bg-gray-800 rounded-lg mb-1">
                                <img src="${user.profileImage}" alt="${user.name}" class="w-10 h-10 rounded-full object-cover">
                                <div class="ml-3">
                                    <h4 class="font-medium text-gray-800 dark:text-white">${user.name}</h4>
                                    <p class="text-sm text-gray-500 dark:text-gray-400">@${user.username}</p>
                                </div>
                            </a>
                        `;
                    });
                    
                    // Update results container
                    searchResultsList.innerHTML = resultsHTML;
                })
                .catch(error => {
                    console.error('Error searching users:', error);
                    searchLoading.classList.add('hidden');
                    searchResultsList.innerHTML = '<div class="p-3 text-red-500 text-center">Error fetching results</div>';
                });
        }, 300); // 300ms delay before search
    });
    
    // Close search results when clicking elsewhere
    document.addEventListener('click', function(e) {
        const searchResults = document.getElementById('searchResults');
        const searchInput = document.getElementById('searchInput');
        
        if (e.target !== searchInput && !searchResults.contains(e.target)) {
            searchResults.classList.add('hidden');
        }
    });
    
    // Legacy search for user cards (keep for when viewing the "Discover People" tab)
    document.getElementById('searchInput').addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const userCards = document.querySelectorAll('.user-card');
        
        userCards.forEach(card => {
            const name = card.querySelector('h4').textContent.toLowerCase();
            const username = card.querySelector('p').textContent.toLowerCase();
            
            if (name.includes(searchTerm) || username.includes(searchTerm)) {
                card.style.display = 'block';
            } else {
                card.style.display = 'none';
            }
        });
    });

    // Follow user functionality
    function followUser(userId) {
        const btn = document.querySelector(`.follow-btn[data-user-id="${userId}"]`);
        
        // Disable button during request and change text
        btn.disabled = true;
        btn.innerHTML = 'Following...';
        
        // Send request to follow user
        fetch(`/user/${userId}/follow`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            if (data.error) {
                showToast(data.error);
                // Reset button
                btn.disabled = false;
                btn.innerHTML = 'Follow';
            } else {
                // Success - update button
                if (data.followRequested) {
                    btn.innerHTML = 'Requested';
                    btn.classList.remove('bg-blue-500', 'hover:bg-blue-600');
                    btn.classList.add('bg-gray-300', 'dark:bg-gray-700', 'text-gray-800', 'dark:text-white');
                } else {
                    btn.innerHTML = 'Following';
                    btn.classList.remove('bg-blue-500', 'hover:bg-blue-600');
                    btn.classList.add('bg-gray-300', 'dark:bg-gray-700', 'text-gray-800', 'dark:text-white');
                }
                showToast(data.followRequested ? 'Follow request sent' : 'Following user');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showToast('Failed to follow user');
            // Reset button
            btn.disabled = false;
            btn.innerHTML = 'Follow';
        });
    }

    // Show toast notification
    function showToast(message) {
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toast-message');
        
        toastMessage.innerHTML = message;
        toast.classList.remove('translate-y-full', 'opacity-0');
        toast.classList.add('translate-y-0', 'opacity-100');
        
        // Hide after 3 seconds
        setTimeout(() => {
            toast.classList.remove('translate-y-0', 'opacity-100');
            toast.classList.add('translate-y-full', 'opacity-0');
        }, 3000);
    }
</script>

<%- include('partials/footer') %> 