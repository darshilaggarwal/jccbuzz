<%- include('partials/header2') %>

<div class="min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
                Twilio SMS Test Tool
            </h2>
            <p class="mt-2 text-center text-sm text-gray-600">
                Use this tool to test SMS delivery with Twilio
            </p>
        </div>
        
        <div id="status-message" class="hidden p-4 rounded-md text-sm"></div>
        
        <div class="mt-8 space-y-6">
            <div class="rounded-md shadow-sm space-y-4">
                <div>
                    <label for="phone_number" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
                    <input id="phone_number" name="phone_number" type="text" 
                           class="appearance-none rounded-md relative block w-full px-3 py-2 border
                                  border-gray-300 placeholder-gray-500 text-gray-900
                                  focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                           placeholder="e.g. +919971790378 (include country code +91)"
                           value="<%= defaultPhone %>">
                </div>
                
                <div>
                    <label for="message" class="block text-sm font-medium text-gray-700 mb-1">Message</label>
                    <textarea id="message" name="message" rows="3"
                              class="appearance-none rounded-md relative block w-full px-3 py-2 border
                                     border-gray-300 placeholder-gray-500 text-gray-900
                                     focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                              placeholder="Enter test message"><%= defaultMessage %></textarea>
                </div>
                
                <div>
                    <div class="flex items-center">
                        <input id="use_otp" name="use_otp" type="checkbox" checked
                               class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded">
                        <label for="use_otp" class="ml-2 block text-sm text-gray-900">
                            Send as OTP (generates a 6-digit code)
                        </label>
                    </div>
                </div>
            </div>
            
            <div>
                <button id="send-sms-btn" type="button" 
                        class="group relative w-full flex justify-center py-2 px-4 border border-transparent
                               text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700
                               focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Send Test SMS
                </button>
            </div>
            
            <div class="mt-4">
                <div class="rounded-md bg-gray-50 dark:bg-gray-800 p-4">
                    <h3 class="text-sm font-medium text-gray-900 dark:text-gray-100">API Configuration</h3>
                    <div class="mt-2 text-sm text-gray-500 dark:text-gray-400">
                        <p>Account SID: <%= apiKeyStatus %></p>
                        <p>Twilio Phone: <%= twilioPhone || 'Not configured' %></p>
                    </div>
                </div>
            </div>
            
            <div id="results-section" class="hidden mt-4">
                <div class="rounded-md bg-gray-50 dark:bg-gray-800 p-4">
                    <h3 class="text-sm font-medium text-gray-900 dark:text-gray-100">API Response</h3>
                    <pre id="response-data" class="mt-2 text-xs text-gray-500 dark:text-gray-400 overflow-auto max-h-60"></pre>
                </div>
            </div>
            
            <div class="mt-4">
                <h3 class="text-sm font-medium text-gray-900 dark:text-gray-100">Troubleshooting Steps</h3>
                <ol class="mt-2 text-sm text-gray-500 dark:text-gray-400 list-decimal pl-5 space-y-1">
                    <li>Verify your Twilio account has sufficient credit</li>
                    <li>Make sure you're using a verified phone number during trial</li>
                    <li>Include the country code in the phone number (e.g., +91)</li>
                    <li>Check that your Twilio phone number can send SMS</li>
                    <li>Verify your Twilio account is active (not suspended)</li>
                </ol>
            </div>
            
            <div class="mt-4">
                <h3 class="text-sm font-medium text-gray-900 dark:text-gray-100">Setting Up Twilio</h3>
                <ol class="mt-2 text-sm text-gray-500 dark:text-gray-400 list-decimal pl-5 space-y-1">
                    <li>Sign up at <a href="https://www.twilio.com/try-twilio" class="text-blue-500 hover:underline" target="_blank">twilio.com</a></li>
                    <li>Get your Account SID and Auth Token from the dashboard</li>
                    <li>Buy a Twilio phone number with SMS capabilities</li>
                    <li>Add these credentials to your .env file</li>
                    <li>During trial, verify your personal phone number for testing</li>
                </ol>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const phoneInput = document.getElementById('phone_number');
    const messageInput = document.getElementById('message');
    const useOtpCheckbox = document.getElementById('use_otp');
    const sendButton = document.getElementById('send-sms-btn');
    const statusMessage = document.getElementById('status-message');
    const resultsSection = document.getElementById('results-section');
    const responseData = document.getElementById('response-data');
    
    // Set the message to disabled if OTP checkbox is checked
    function toggleMessageInput() {
        if (useOtpCheckbox.checked) {
            messageInput.disabled = true;
            messageInput.value = "Your verification code for JCCbuzz is: XXXXXX. Valid for 2 minutes.";
        } else {
            messageInput.disabled = false;
        }
    }
    
    // Initialize state
    toggleMessageInput();
    
    // Add event listener to OTP checkbox
    useOtpCheckbox.addEventListener('change', toggleMessageInput);
    
    // Add event listener to send button
    sendButton.addEventListener('click', async function() {
        const phone = phoneInput.value.trim();
        const useOtp = useOtpCheckbox.checked;
        
        if (!phone) {
            showStatus('Please enter a phone number', 'error');
            return;
        }
        
        // Update button state
        sendButton.disabled = true;
        sendButton.textContent = 'Sending...';
        showStatus('Sending SMS, please wait...', 'info');
        
        try {
            // Make API call
            const response = await fetch('/admin/send-test-sms', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    phone: phone,
                    message: useOtp ? null : messageInput.value.trim(),
                    use_otp: useOtp
                })
            });
            
            const data = await response.json();
            
            // Update response section
            resultsSection.classList.remove('hidden');
            responseData.textContent = JSON.stringify(data, null, 2);
            
            if (data.success) {
                showStatus('SMS sent successfully!', 'success');
            } else {
                showStatus(`Failed to send SMS: ${data.error}`, 'error');
            }
        } catch (error) {
            showStatus(`Error: ${error.message}`, 'error');
            responseData.textContent = `Error: ${error.message}`;
            resultsSection.classList.remove('hidden');
        }
        
        // Reset button state
        sendButton.disabled = false;
        sendButton.textContent = 'Send Test SMS';
    });
    
    // Helper function to show status messages
    function showStatus(message, type) {
        statusMessage.textContent = message;
        statusMessage.classList.remove('hidden', 'bg-green-100', 'text-green-800', 'bg-red-100', 'text-red-800', 'bg-blue-100', 'text-blue-800');
        
        if (type === 'success') {
            statusMessage.classList.add('bg-green-100', 'text-green-800');
        } else if (type === 'error') {
            statusMessage.classList.add('bg-red-100', 'text-red-800');
        } else {
            statusMessage.classList.add('bg-blue-100', 'text-blue-800');
        }
    }
});
</script>

<%- include('partials/footer') %> 