<%- include('partials/header') %>

<div class="max-w-4xl mx-auto mt-8 px-4">
    <div class="flex items-center justify-between mb-6">
        <h1 class="text-2xl font-bold text-gray-800 dark:text-white">Saved Posts</h1>
        <a href="/feed" class="text-blue-500 hover:text-blue-600 flex items-center">
            <i class="fas fa-arrow-left mr-2"></i> Back to Feed
        </a>
    </div>

    <% if (savedPosts.length === 0) { %>
        <div class="bg-white dark:bg-black rounded-lg shadow-md p-8 text-center">
            <div class="text-gray-500 dark:text-gray-400 mb-4">
                <i class="fas fa-bookmark text-5xl"></i>
            </div>
            <h3 class="text-xl font-semibold text-gray-800 dark:text-white mb-2">No saved posts yet</h3>
            <p class="text-gray-600 dark:text-gray-400">
                When you save posts, they'll appear here. Only you can see what you've saved.
            </p>
            <a href="/feed" class="mt-6 inline-block px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">
                Browse Feed
            </a>
        </div>
    <% } else { %>
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            <% savedPosts.forEach(post => { %>
                <div class="bg-white dark:bg-black rounded-lg shadow-md overflow-hidden post-container">
                    <div class="p-3 flex items-center justify-between">
                        <a href="/user/<%= post.user.username %>" class="flex items-center group">
                            <img src="<%= post.user.profileImage %>" 
                                 alt="<%= post.user.name %>" 
                                 class="w-8 h-8 rounded-full object-cover">
                            <div class="ml-2">
                                <span class="font-medium text-sm text-gray-800 dark:text-white group-hover:text-blue-500"><%= post.user.name %></span>
                            </div>
                        </a>
                        <button onclick="toggleSavePost('<%= post._id %>')" class="text-blue-500 hover:text-blue-700">
                            <i class="fas fa-bookmark"></i>
                        </button>
                    </div>
                    
                    <!-- Post Image -->
                    <% if (post.images && post.images.length > 0) { %>
                        <div class="relative post-image" ondblclick="handleDoubleTap('<%= post._id %>')">
                            <div class="swiper-container">
                                <div class="swiper-wrapper">
                                    <% post.images.forEach(image => { %>
                                        <div class="swiper-slide">
                                            <img src="<%= image.url %>" 
                                                 alt="Post image"
                                                 class="w-full h-64 object-cover">
                                        </div>
                                    <% }) %>
                                </div>
                                <% if (post.images.length > 1) { %>
                                    <div class="swiper-pagination"></div>
                                    <div class="swiper-button-next"></div>
                                    <div class="swiper-button-prev"></div>
                                <% } %>
                            </div>
                            <div class="heart-animation hidden absolute inset-0 flex items-center justify-center">
                                <i class="fas fa-heart text-white text-6xl"></i>
                            </div>
                        </div>
                    <% } %>
                    
                    <!-- Post Content -->
                    <div class="p-3">
                        <div class="flex items-center space-x-3 mb-2">
                            <button onclick="toggleLike('<%= post._id %>')" 
                                    id="like-btn-<%= post._id %>"
                                    class="like-btn <%= post.likes.includes(user._id) ? 'text-red-500' : 'text-gray-500' %> hover:text-red-500">
                                <i class="fas fa-heart"></i>
                                <span class="like-count text-xs ml-1"><%= post.likes.length %></span>
                            </button>
                            <a href="/post/<%= post._id %>" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300">
                                <i class="fas fa-comment"></i>
                                <span class="text-xs ml-1"><%= post.comments.length %></span>
                            </a>
                            <button onclick="sharePost('<%= post._id %>')" class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300">
                                <i class="fas fa-share"></i>
                            </button>
                        </div>
                        
                        <h4 class="font-medium text-gray-800 dark:text-white mb-1 truncate"><%= post.title %></h4>
                        <p class="text-gray-600 dark:text-gray-400 text-sm mb-2 line-clamp-2"><%= post.content %></p>
                        
                        <a href="/post/<%= post._id %>" class="text-xs text-blue-500 hover:text-blue-600">View details</a>
                    </div>
                </div>
            <% }) %>
        </div>
    <% } %>
</div>

<!-- Share Modal (Same as in feed.ejs) -->
<div id="shareModal" class="hidden fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
    <div class="bg-white dark:bg-gray-900 rounded-lg max-w-md w-full mx-4 overflow-hidden modal-content">
        <div class="p-4 border-b border-gray-200 dark:border-gray-700 flex justify-between items-center">
            <h3 class="font-semibold text-lg text-gray-800 dark:text-white">Share Post</h3>
            <button onclick="closeShareModal()" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-300">
                <i class="fas fa-times"></i>
            </button>
        </div>
        <div class="p-4">
            <div class="mb-4">
                <label for="shareRecipient" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Share with:</label>
                <input type="text" id="shareRecipient" placeholder="Type username..." class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-800 text-gray-800 dark:text-white">
                <div id="userResults" class="mt-2 max-h-40 overflow-y-auto hidden"></div>
            </div>
            <div class="mb-4">
                <label for="shareMessage" class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Message (optional):</label>
                <textarea id="shareMessage" rows="3" class="w-full px-3 py-2 border border-gray-300 dark:border-gray-700 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-800 text-gray-800 dark:text-white"></textarea>
            </div>
            <div id="shareError" class="text-red-500 text-sm mb-4 hidden"></div>
            <div class="flex justify-end">
                <button onclick="closeShareModal()" class="mr-2 px-4 py-2 text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200">
                    Cancel
                </button>
                <button id="confirmShareButton" class="px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50">
                    Share
                </button>
            </div>
        </div>
    </div>
</div>

<script src="https://unpkg.com/swiper@8/swiper-bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Initialize Swiper for all post images
        const swipers = document.querySelectorAll('.swiper-container');
        swipers.forEach(swiperContainer => {
            new Swiper(swiperContainer, {
                loop: false,
                pagination: {
                    el: '.swiper-pagination',
                    clickable: true
                },
                navigation: {
                    nextEl: '.swiper-button-next',
                    prevEl: '.swiper-button-prev',
                },
            });
        });
    });

    // Like functionality
    function toggleLike(postId) {
        fetch(`/post/${postId}/like`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            const likeBtn = document.getElementById(`like-btn-${postId}`);
            const likeCount = likeBtn.querySelector('.like-count');
            
            if (data.liked) {
                likeBtn.classList.remove('text-gray-500');
                likeBtn.classList.add('text-red-500');
            } else {
                likeBtn.classList.remove('text-red-500');
                likeBtn.classList.add('text-gray-500');
            }
            
            likeCount.textContent = data.likeCount;
        })
        .catch(error => console.error('Error:', error));
    }

    // Double tap to like
    function handleDoubleTap(postId) {
        const likeBtn = document.getElementById(`like-btn-${postId}`);
        const imgContainer = event.currentTarget;
        const heartAnimation = imgContainer.querySelector('.heart-animation');
        
        // Only like if not already liked
        if (!likeBtn.classList.contains('text-red-500')) {
            toggleLike(postId);
            
            // Show heart animation
            heartAnimation.classList.remove('hidden');
            setTimeout(() => {
                heartAnimation.classList.add('hidden');
            }, 1000);
        }
    }

    // Save post functionality
    function toggleSavePost(postId) {
        fetch(`/post/${postId}/save`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => response.json())
        .then(data => {
            // If the post was unsaved, remove it from the saved posts page with animation
            if (!data.saved) {
                const postElement = document.querySelector(`button[onclick="toggleSavePost('${postId}')"]`).closest('.post-container');
                
                if (postElement) {
                    postElement.style.transition = 'opacity 0.3s ease, transform 0.3s ease';
                    postElement.style.opacity = '0';
                    postElement.style.transform = 'scale(0.9)';
                    
                    setTimeout(() => {
                        postElement.remove();
                        
                        // Check if there are any posts left
                        const remainingPosts = document.querySelectorAll('.post-container');
                        if (remainingPosts.length === 0) {
                            // Reload the page to show the "No saved posts" message
                            window.location.reload();
                        }
                    }, 300);
                }
            }
        })
        .catch(error => console.error('Error:', error));
    }

    // Share post functionality
    let currentPostId = null;
    let selectedUserId = null;

    function sharePost(postId) {
        currentPostId = postId;
        document.getElementById('shareModal').classList.remove('hidden');
        document.getElementById('shareRecipient').value = '';
        document.getElementById('shareMessage').value = '';
        document.getElementById('shareError').classList.add('hidden');
        document.getElementById('userResults').classList.add('hidden');
    }

    function closeShareModal() {
        document.getElementById('shareModal').classList.add('hidden');
        currentPostId = null;
        selectedUserId = null;
    }

    // User search for share functionality
    document.getElementById('shareRecipient').addEventListener('input', function(e) {
        const query = e.target.value.trim();
        const userResults = document.getElementById('userResults');
        
        if (query.length < 2) {
            userResults.classList.add('hidden');
            return;
        }
        
        fetch(`/search?q=${encodeURIComponent(query)}&format=json`)
            .then(response => response.json())
            .then(data => {
                userResults.innerHTML = '';
                
                if (data.users && data.users.length > 0) {
                    data.users.forEach(user => {
                        const userItem = document.createElement('div');
                        userItem.className = 'flex items-center p-2 hover:bg-gray-100 dark:hover:bg-gray-800 cursor-pointer search-result-item';
                        userItem.innerHTML = `
                            <img src="${user.profileImage}" alt="${user.name}" class="w-8 h-8 rounded-full mr-2">
                            <div>
                                <div class="font-semibold text-gray-800 dark:text-white">${user.name}</div>
                                <div class="text-xs text-gray-500 dark:text-gray-400">@${user.username}</div>
                            </div>
                        `;
                        userItem.addEventListener('click', function() {
                            document.getElementById('shareRecipient').value = user.username;
                            selectedUserId = user._id;
                            userResults.classList.add('hidden');
                        });
                        userResults.appendChild(userItem);
                    });
                    userResults.classList.remove('hidden');
                } else {
                    userResults.innerHTML = '<div class="p-2 text-gray-500 dark:text-gray-400">No users found</div>';
                    userResults.classList.remove('hidden');
                }
            })
            .catch(error => console.error('Error:', error));
    });

    // Share confirmation
    document.getElementById('confirmShareButton').addEventListener('click', function() {
        const username = document.getElementById('shareRecipient').value.trim();
        const message = document.getElementById('shareMessage').value.trim();
        const errorElement = document.getElementById('shareError');
        
        if (!username) {
            errorElement.textContent = 'Please enter a username to share with';
            errorElement.classList.remove('hidden');
            return;
        }
        
        fetch(`/post/${currentPostId}/share`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ username, message })
        })
        .then(response => {
            if (!response.ok) {
                return response.json().then(data => {
                    throw new Error(data.error || 'Failed to share post');
                });
            }
            return response.json();
        })
        .then(data => {
            closeShareModal();
            alert('Post shared successfully!');
        })
        .catch(error => {
            errorElement.textContent = error.message;
            errorElement.classList.remove('hidden');
        });
    });

    // Close modals when clicking outside
    window.addEventListener('click', function(event) {
        const shareModal = document.getElementById('shareModal');
        
        if (event.target === shareModal) {
            closeShareModal();
        }
    });
</script>

</body>
</html> 