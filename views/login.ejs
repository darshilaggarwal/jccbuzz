<%- include('partials/header') %>

<div class="min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
        <div>
            <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
                Sign in to your account
            </h2>
            <p class="mt-2 text-center text-sm text-gray-600">
                Or
                <a href="/register" class="font-medium text-blue-600 hover:text-blue-500">
                    create an account
                </a>
            </p>
        </div>
        
        <!-- Server-rendered error message (kept for backward compatibility) -->
        <% if (locals.error) { %>
            <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative" role="alert">
                <span class="block sm:inline"><%= error %></span>
            </div>
        <% } %>
        
        <!-- Toast-style error message -->
        <div id="toast" class="fixed top-4 right-4 max-w-xs bg-red-500 text-white px-4 py-3 rounded shadow-lg transform transition-all duration-500 opacity-0 translate-y-8 pointer-events-none" role="alert">
            <div class="flex items-center">
                <div class="py-1"><svg class="fill-current h-6 w-6 text-white mr-4" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path d="M2.93 17.07A10 10 0 1 1 17.07 2.93 10 10 0 0 1 2.93 17.07zm12.73-1.41A8 8 0 1 0 4.34 4.34a8 8 0 0 0 11.32 11.32zM9 11V9h2v6H9v-4zm0-6h2v2H9V5z"/></svg></div>
                <div id="toastMessage"></div>
            </div>
        </div>
        
        <form class="mt-8 space-y-6" action="/login" method="POST">
            <div class="rounded-md shadow-sm -space-y-px">
                <div>
                    <label for="identifier" class="sr-only">Email or Username</label>
                    <input id="identifier" name="identifier" type="text" required 
                           class="appearance-none rounded-none relative block w-full px-3 py-2 border
                                  border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md
                                  focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                           placeholder="Email or Username">
                </div>
                <div>
                    <label for="password" class="sr-only">Password</label>
                    <input id="password" name="password" type="password" required 
                           class="appearance-none rounded-none relative block w-full px-3 py-2 border
                                  border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md
                                  focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm"
                           placeholder="Password">
                </div>
            </div>

            <div>
                <button type="submit" 
                        class="group relative w-full flex justify-center py-2 px-4 border border-transparent
                               text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700
                               focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                    Sign in
                </button>
            </div>
        </form>
    </div>
</div>

<script>
// Check URL parameters for error messages
document.addEventListener('DOMContentLoaded', function() {
    const urlParams = new URLSearchParams(window.location.search);
    const errorParam = urlParams.get('error');
    
    if (errorParam) {
        let errorMessage = '';
        
        switch(errorParam) {
            case 'invalid_credentials':
                errorMessage = 'Invalid email/username or password.';
                break;
            case 'session_expired':
                errorMessage = 'Your session has expired. Please sign in again.';
                break;
            default:
                errorMessage = 'An error occurred during login. Please try again.';
        }
        
        showToast(errorMessage);
    }
    
    // Function to show toast message
    function showToast(message) {
        const toast = document.getElementById('toast');
        const toastMessage = document.getElementById('toastMessage');
        
        toastMessage.textContent = message;
        
        // Show the toast
        toast.classList.remove('opacity-0', 'translate-y-8');
        toast.classList.add('opacity-100', 'translate-y-0');
        
        // Hide the toast after 5 seconds
        setTimeout(() => {
            toast.classList.add('opacity-0', 'translate-y-8');
            toast.classList.remove('opacity-100', 'translate-y-0');
        }, 5000);
    }
});
</script>

</body>
</html>
