<%- include('partials/header2') %>

<style>
/* Animations */
@keyframes like-animation {
    0% { transform: scale(0); opacity: 0; }
    15% { transform: scale(1.5); opacity: 1; }
    30% { transform: scale(0.8); opacity: 1; }
    45% { transform: scale(1.2); opacity: 1; }
    60% { transform: scale(0.9); opacity: 1; }
    75% { transform: scale(1.1); opacity: 1; }
    100% { transform: scale(1); opacity: 0; }
}

.heart-animation {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 120px;
    color: white;
    text-shadow: 0 0 30px rgba(0,0,0,0.4);
    pointer-events: none;
    z-index: 10;
    opacity: 0;
}

.heart-animation.active {
    animation: like-animation 1s ease-in-out forwards;
}

.like-btn {
    transition: transform 0.2s, color 0.2s;
}

.like-btn.liked {
    animation: like-button-animation 0.3s ease-in-out;
}

@keyframes like-button-animation {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); }
    100% { transform: scale(1); }
}
</style>

<div class="max-w-4xl mx-auto mt-8 px-4">
    <div class="bg-white dark:bg-black rounded-lg shadow-md overflow-hidden">
        <!-- Post Header -->
        <div class="p-4 flex items-center justify-between">
            <a href="/user/<%= post.user.username %>" class="flex items-center group">
                <div class="relative">
                    <img src="<%= post.user.profileImage %>" 
                         alt="Profile" 
                         class="w-10 h-10 rounded-full object-cover group-hover:opacity-90">
                    <div class="absolute -bottom-1 -right-1 w-3 h-3 bg-green-500 rounded-full border-2 border-white dark:border-gray-700"></div>
                </div>
                <div class="ml-3">
                    <h5 class="font-semibold text-gray-800 dark:text-white group-hover:text-blue-600 dark:group-hover:text-blue-400"><%= post.user.name %></h5>
                    <p class="text-xs text-gray-500 dark:text-gray-400">@<%= post.user.username %></p>
                </div>
            </a>
            <div class="flex space-x-2">
                <button onclick="showPostOptions('<%= post._id %>')" class="text-gray-400 dark:text-gray-500 hover:text-gray-600 dark:hover:text-gray-400">
                    <i class="fas fa-ellipsis-h"></i>
                </button>
            </div>
        </div>

        <!-- Images -->
        <% if (post.images && post.images.length > 0) { %>
            <div class="relative post-image" ondblclick="handleDoubleTap('<%= post._id %>')">
                <div class="swiper-container">
                    <div class="swiper-wrapper">
                        <% post.images.forEach(image => { %>
                            <div class="swiper-slide">
                                <img src="<%= image.url %>" 
                                     alt="Post image"
                                     class="w-full object-cover post-img md:max-h-[600px] h-auto aspect-square md:aspect-auto">
                            </div>
                        <% }) %>
                    </div>
                    <% if (post.images.length > 1) { %>
                        <div class="swiper-pagination"></div>
                        <div class="swiper-button-next"></div>
                        <div class="swiper-button-prev"></div>
                        <div class="absolute bottom-4 right-4 bg-black/50 text-white text-xs px-2 py-1 rounded-full z-10">
                            <span class="current-slide">1</span>/<%= post.images.length %>
                        </div>
                    <% } %>
                </div>
                <div class="heart-animation hidden">
                    <i class="fas fa-heart"></i>
                </div>
            </div>
        <% } %>

        <!-- Post Content -->
        <div class="p-4">
            <!-- Actions -->
            <div class="flex items-center justify-between mb-4">
                <div class="flex items-center space-x-4">
                    <button onclick="toggleLike('<%= post._id %>')" 
                            id="like-btn-<%= post._id %>"
                            class="like-btn <%= post.likes.some(id => id.toString() === user._id.toString()) ? 'text-red-500' : 'text-gray-500' %> hover:scale-110 transform transition-transform">
                        <i class="fas fa-heart text-2xl"></i>
                        <span class="like-count ml-1 text-sm"><%= post.likes.length %></span>
                    </button>
                    <button onclick="focusComment('<%= post._id %>')" 
                            class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:scale-110 transform transition-transform">
                        <i class="fas fa-comment text-2xl"></i>
                        <span class="ml-1 text-sm"><%= post.comments.length %></span>
                    </button>
                    <button onclick="sharePost('<%= post._id %>')" 
                            class="text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:scale-110 transform transition-transform">
                        <i class="fas fa-share text-2xl"></i>
                    </button>
                </div>
                <button onclick="toggleSavePost('<%= post._id %>')"
                        id="save-btn-<%= post._id %>"
                        class="save-btn <%= user.savedPosts && user.savedPosts.includes(post._id) ? 'text-blue-500' : 'text-gray-500' %> dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:scale-110 transform transition-transform">
                    <i class="fas fa-bookmark text-2xl"></i>
                </button>
            </div>

            <h3 class="font-semibold text-lg mb-2 text-gray-800 dark:text-white"><%= post.title %></h3>
            <p class="text-gray-700 dark:text-gray-300 mb-2"><%= post.content %></p>
            
            <!-- Post Metadata -->
            <div class="text-xs text-gray-500 dark:text-gray-400 mb-4">
                <span><%= new Date(post.createdAt).toLocaleDateString('en-US', { month: 'long', day: 'numeric' }) %></span>
                • <span><%= post.likes.length %> likes</span>
                • <span><%= post.comments.length %> comments</span>
            </div>

            <!-- Comments Section -->
            <%- include('partials/comments', { post, user }) %>
        </div>
    </div>
</div>

<!-- Include necessary scripts -->
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script src="/socket.io/socket.io.js"></script>

<script>
// Initialize Swiper
document.addEventListener('DOMContentLoaded', () => {
    const swipers = document.querySelectorAll('.swiper-container');
    swipers.forEach((container, index) => {
        const swiper = new Swiper(container, {
            pagination: {
                el: '.swiper-pagination',
                dynamicBullets: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            grabCursor: true,
            slideToClickedSlide: true,
            keyboard: {
                enabled: true,
            },
            on: {
                slideChange: function() {
                    const currentSlideIndicator = container.querySelector('.current-slide');
                    if (currentSlideIndicator) {
                        currentSlideIndicator.textContent = this.activeIndex + 1;
                    }
                }
            }
        });
    });
    
    // Adjust image heights for better consistency
    const adjustPostImageHeights = () => {
        const postImages = document.querySelectorAll('.post-img');
        
        if (window.innerWidth >= 768) { // md breakpoint in Tailwind
            postImages.forEach(img => {
                const postWidth = img.offsetWidth;
                // Use a more reasonable height for desktop view (max 600px)
                img.style.maxHeight = '600px';
            });
        } else {
            // On mobile, use square aspect ratio
            postImages.forEach(img => {
                img.style.height = img.offsetWidth + 'px';
            });
        }
    };
    
    // Run once on load
    adjustPostImageHeights();
    
    // Update on window resize
    window.addEventListener('resize', adjustPostImageHeights);
});

// Like functionality
function toggleLike(postId) {
    fetch(`/post/${postId}/like`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        }
    })
    .then(response => response.json())
    .then(data => {
        const likeBtn = document.getElementById(`like-btn-${postId}`);
        const likeCount = likeBtn.querySelector('.like-count');
        
        if (data.isLiked) {
            likeBtn.classList.remove('text-gray-500');
            likeBtn.classList.add('text-red-500');
            likeBtn.classList.add('liked');
            setTimeout(() => likeBtn.classList.remove('liked'), 300);
        } else {
            likeBtn.classList.remove('text-red-500');
            likeBtn.classList.add('text-gray-500');
        }
        
        likeCount.textContent = data.likes;
    })
    .catch(error => console.error('Error:', error));
}

// Double tap to like
function handleDoubleTap(postId) {
    const likeBtn = document.getElementById(`like-btn-${postId}`);
    const imgContainer = event.currentTarget;
    const heartAnimation = imgContainer.querySelector('.heart-animation');
    
    // Only like if not already liked
    if (!likeBtn.classList.contains('text-red-500')) {
        toggleLike(postId);
        
        // Show heart animation
        heartAnimation.classList.remove('hidden');
        heartAnimation.classList.add('active');
        setTimeout(() => {
            heartAnimation.classList.add('hidden');
            heartAnimation.classList.remove('active');
        }, 1000);
    }
}

// Add double tap detection
document.addEventListener('DOMContentLoaded', () => {
    // Setup double tap detection on post images
    const postImages = document.querySelectorAll('.post-image');
    postImages.forEach(img => {
        let lastTap = 0;
        img.addEventListener('touchend', function(e) {
            const currentTime = new Date().getTime();
            const tapLength = currentTime - lastTap;
            if (tapLength < 500 && tapLength > 0) {
                // Double tap detected
                const postId = img.closest('.post-container, .bg-white').querySelector('.like-btn').id.replace('like-btn-', '');
                handleDoubleTap(postId);
                e.preventDefault();
            }
            lastTap = currentTime;
        });
        
        // Add click event for faster testing on desktop (two clicks within 500ms)
        img.addEventListener('click', function(e) {
            const currentTime = new Date().getTime();
            const clickLength = currentTime - lastTap;
            if (clickLength < 500 && clickLength > 0) {
                // Double click detected
                const postId = this.closest('.post-container, .bg-white').querySelector('.like-btn').id.replace('like-btn-', '');
                handleDoubleTap(postId);
            }
            lastTap = currentTime;
        });
    });
});
</script>

<%- include('partials/footer') %> 